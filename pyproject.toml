[tool.poetry]
name = "trayport-client"
version = "0.1.0"
description = "High-performance Python client for Trayport Data Analytics API"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [{include = "trayport_client"}]
python = "^3.12"

[tool.poetry.dependencies]
python = "^3.12"
httpx = {extras = ["http2", "brotli"], version = "^0.27.0"}
pydantic = "^2.5.0"
pydantic-settings = "^2.1.0"
structlog = "^23.2.0"
python-dotenv = "^1.0.0"
# High-performance JSON processing
orjson = "^3.9.0"
ujson = "^5.8.0"
# Fast data processing
numpy = "^1.26.0"
polars = "^0.20.0"
pyarrow = "^14.0.0"
# Memory profiling and optimization
pympler = "^0.9.0"
memory-profiler = "^0.61.0"
# Async performance
uvloop = {version = "^0.19.0", markers = "sys_platform != 'win32'"}
aiofiles = "^23.2.0"
# Caching
redis = {extras = ["hiredis"], version = "^5.0.0"}
aiocache = "^0.12.0"
# Compression
lz4 = "^4.3.0"
zstandard = "^0.22.0"
brotli = "^1.1.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-asyncio = "^0.21.0"
pytest-mock = "^3.11.0"
pytest-cov = "^4.1.0"
pytest-benchmark = "^4.0.0"
pytest-xdist = "^3.5.0"
black = "^23.0.0"
isort = "^5.12.0"
mypy = "^1.5.0"
ruff = "^0.1.0"
mkdocs = "^1.5.0"
mkdocs-material = "^9.4.0"
# Performance profiling
py-spy = "^0.3.14"
line-profiler = "^4.1.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ['py312']
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 100

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.ruff]
line-length = 100
target-version = "py312"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-ra -q --strict-markers --strict-config"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "benchmark: marks tests as benchmark tests",
]